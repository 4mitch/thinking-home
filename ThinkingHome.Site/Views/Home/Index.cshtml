@{
	ViewBag.Title = "Добро пожаловать!";
	ViewBag.Name = "Welcome";
	Layout = "~/Views/Shared/Layout.cshtml";
}
<div class="row">
	<div class="col-md-12">
		<h1>Управление домом по сценариям</h1>
		<p>
			Система позволяет управлять домом по сценариям, т.е. назначать на различные события
			в доме произвольную логику по управлению домашними устройствами. Событие
			- это срабатывание датчика, сигнал с таймера, нажатие на кнопку или, например, получение
			сообщения в твиттере. При возникновении события запускаются сценарии - небольшие
			программы которые могут управлять домашними устройствами. Например, сценарий может
			проверить температуру в доме и включить теплый пол, если нужно.
		</p>
		<h2>Как это работает?</h2>
		<p>
			Система состоит из двух частей: сервис автоматизации (windows service) и веб-приложение.
			Сервис работает постоянно, он занимается обработкой событий и выполнением сценариев.
			Web-приложение позволяет работать работать с сервисом через GUI: изменять настройки
			(например, редактировать сценарии) и отправлять команды (например, выключить свет).
			Оба приложения написаны на .NET.
		</p>
		<p>
			<img style="margin: 40px auto;" class="img-responsive" src="~/Content/img/scheme.png" alt="Thinking-Home.System - управление домом по сценариям"/>
		</p>
		<p>
			Сервис имеет систему плагинов. При помощи плагинов можно расширять список возможных
			событий в системе (например, генерировать событие при срабатывании датчика движения)
			и взаимодействовать с любыми устройствами (например, с системой noolite) или сервисами
			(например, с сервером электронной почты). 
		</p>
		<p>
			По большому счету, весь функционал системы находится в плагинах, а сервис содержит
			только инфраструктуру для их работы. Он обеспечивает загрузку плагинов и организует
			их жизненный цикл, а также предоставляет им средства для логирования, для работы
			с внутренней БД, для взаимодействия друг с другом (плагины могут подписываться на
			события друг друга и вызывать команды друг друга).	 
		</p>
	</div>
</div>

